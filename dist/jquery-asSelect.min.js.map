{"version":3,"sources":["jquery-asSelect.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsSelectEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","skin","trigger","offset","json","preload","load","maxHeight","select","undefined","render","label","selected","text","option","item","group","onChange","NAMESPACE$1","instances","asSelect","element","options","arguments","$select","metas","each","data","k","v","re","RegExp","test","toLowerCase","replace","extend","classes","wrapper","old","dropdown","handler","mask","open","disabled","focus","loading","error","opened","eventBinded","inFocus","currentIndex","isScroll","last","initialized","_trigger","init","value","$wrapper","wrap","parent","$trigger","$label","prependTo","$dropdown","$ul","children","$options","find","addClass","prop","disable","unChooseText","css","parse","update","append","attachInitEvent","onLoad","push","eventType","_len","params","Array","_key","concat","onFunction","word","substring","toUpperCase","apply","_this","fn","callback","that","results","Math","max","addData","removeClass","html","buildOption","call","isArray","j","$selects","optionToData","slug","replaceDiacritics","tagName","noFreshOptions","freshOptions","$items","total","height","outerHeight","_set","index","scrollToVisibility","$item","getCurrentData","count","result","s","d","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","hasOwnProperty","charAt","err","return","contentHeight","top","window","scrollTop","parseInt","on","close","off","$wrap","document","e","which","keycode","search","direction","navigate","searchString","clearTimeout","timeout","String","fromCharCode","setTimeout","string","trim","itemHeight","oriScrollTop","bottom","distance","position","$mask","appendTo","remove","closeAll","_generateMask","keyboardEvent"],"mappings":";;;;;;;CAAA,SAAAA,EAAAC,GACA,GAAA,mBAAAC,QAAAA,OAAAC,IACAD,QAAA,UAAAD,QACA,GAAA,oBAAAG,QACAH,EAAAI,QAAA,eACA,CACA,IAAAC,GACAF,YAEAH,EAAAD,EAAAO,QACAP,EAAAQ,iBAAAF,EAAAF,SAVA,CAYAK,KAAA,SAAAC,GACA,aAYA,SAAAC,EAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,MAAA,IAAAC,UAAA,qCAZA,IAAAC,EAEA,SAAAC,GACA,OAAAA,GAAAA,EAAAC,WACAD,GAEAE,QAAAF,GANAG,CAAAT,GAgBAU,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,CACA,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,IAAAA,EAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAIA,OAAA,SAAAb,EAAAoB,EAAAC,GAGA,OAFAD,GAAAZ,EAAAR,EAAAsB,UAAAF,GACAC,GAAAb,EAAAR,EAAAqB,GACArB,GAdA,GAoBAuB,GACAC,UAAA,WACAC,KAAA,KACAC,QAAA,QACAC,QAAA,EAAA,GACAC,KAAA,KACAC,SAAA,EACAC,KAAA,KACAC,UAAA,IACAC,YAAAC,EAEAC,QACAC,MAAA,SAAAC,GACA,OAAAA,EACAA,EAAAC,KAEA,cAEAC,OAAA,SAAAC,GACA,OAAAA,EAAAF,MAEAG,MAAA,SAAAD,GACA,OAAAA,EAAAJ,QAIAM,SAAA,cAGAC,EAAA,WACAC,KAKAC,EAAA,WACA,SAAAA,EAAAC,GACA,IAAAC,EACAC,UAAAnC,OAAA,QAAAqB,IAAAc,UAAA,GAAAA,UAAA,MAEAjD,EAAAF,KAAAgD,GAEAhD,KAAAiD,QAAAA,EACAjD,KAAAoD,SAAA,EAAA9C,EAAAG,SAAAwC,GAGA,IAAAI,KACA/C,EAAAG,QAAA6C,KAAAtD,KAAAoD,QAAAG,OAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,OAAA,IAAAb,EAAA,KACAY,EAAAE,KAAAJ,KACAH,EAAAG,EAAAK,cAAAC,QAAAJ,EAAA,KAAAD,KAIAzD,KAAAkD,QAAA5C,EAAAG,QAAAsD,QACA,KAEApC,EACAuB,EACAG,GAEArD,KAAA4B,UAAA5B,KAAAkD,QAAAtB,UAEA5B,KAAAgE,SACAC,QAAAjE,KAAA4B,UAAA,WACAsC,IAAAlE,KAAA4B,UAAA,OACAuC,SAAAnE,KAAA4B,UAAA,YACAE,QAAA9B,KAAA4B,UAAA,WACAW,MAAAvC,KAAA4B,UAAA,SACAwC,QAAApE,KAAA4B,UAAA,WACAe,KAAA3C,KAAA4B,UAAA,QACAgB,MAAA5C,KAAA4B,UAAA,SACAyC,KAAArE,KAAA4B,UAAA,QAEAC,KAAA7B,KAAA4B,UAAA,IAAA5B,KAAAkD,QAAArB,KACAyC,KAAAtE,KAAA4B,UAAA,QACA2C,SAAAvE,KAAA4B,UAAA,YACAY,SAAAxC,KAAA4B,UAAA,YACA4C,MAAAxE,KAAA4B,UAAA,SACA6C,QAAAzE,KAAA4B,UAAA,WACA8C,MAAA1E,KAAA4B,UAAA,UAIA5B,KAAA2E,QAAA,EACA3E,KAAA4E,aAAA,EACA5E,KAAA6E,SAAA,EAEA7E,KAAA8E,aAAA9E,KAAAkD,QAAAd,OACApC,KAAA+E,UAAA,EACA/E,KAAAgF,KAAA,EACAhF,KAAAuE,UAAA,EACAvE,KAAAiF,aAAA,EAEAjF,KAAAkF,SAAA,QACAlF,KAAAmF,cAGAxE,EACAqC,IAGAzB,IAAA,OACA6D,MAAA,WACApF,KAAAqF,SAAArF,KAAAoD,QACAkC,KACA,eACAtF,KAAAgE,QAAAC,QACA,iBACAjE,KAAAgE,QAAAE,IACA,mBAEAqB,SACAA,SACAvF,KAAAwF,UAAA,EAAAlF,EAAAG,SACA,eACAT,KAAAgE,QAAAlC,QACA,iBACA9B,KAAAgE,QAAAI,QACA,kBAEApE,KAAAyF,QAAA,EAAAnF,EAAAG,SACA,eACAT,KAAAgE,QAAAzB,MACA,KACAvC,KAAAkD,QAAAZ,OAAAC,QACA,UACAmD,UAAA1F,KAAAwF,UACAxF,KAAA2F,WAAA,EAAArF,EAAAG,SACA,eAAAT,KAAAgE,QAAAG,SAAA,qBAEAnE,KAAA4F,IAAA5F,KAAA2F,UAAAE,SAAA,MACA7F,KAAA8F,SAAA9F,KAAAoD,QAAA2C,KAAA,UAEA/F,KAAAkD,QAAArB,MACA7B,KAAAqF,SAAAW,SAAAhG,KAAAgE,QAAAnC,MAGA7B,KAAAoD,QAAA6C,KAAA,aACAjG,KAAAkG,UAGAlG,KAAAmG,aAAAnG,KAAAyF,OAAAhD,OACAzC,KAAA2F,UAAAS,IAAA,YAAApG,KAAAkD,QAAAf,WAGAnC,KAAAuD,KAAAvD,KAAAqG,MAAArG,KAAAoD,QAAAyC,YAGA7F,KAAAsG,QAAA,GAGAtG,KAAAqF,SAAAkB,OAAAvG,KAAAwF,UAAAe,OAAAvG,KAAA2F,WAGA3F,KAAAwG,kBAKAxG,KAAAkD,QAAAjB,SACAjC,KAAAyG,SAIA1D,EAAA2D,KAAA1G,MACAA,KAAAiF,aAAA,EACAjF,KAAAkF,SAAA,YAIA3D,IAAA,WACA6D,MAAA,SAAAuB,GACA,IACA,IAAAC,EAAAzD,UAAAnC,OACA6F,EAAAC,MAAAF,EAAA,EAAAA,EAAA,EAAA,GACAG,EAAA,EACAA,EAAAH,EACAG,IAEAF,EAAAE,EAAA,GAAA5D,UAAA4D,GAGA,IAAAxD,GAAAvD,MAAAgH,OAAAH,GAGA7G,KAAAoD,QAAAtB,QAAAgB,EAAA,KAAA6D,EAAApD,GAMA,IAAA0D,EAAA,MAHAN,EAAAA,EAAA7C,QAAA,WAAA,SAAAoD,GACA,OAAAA,EAAAC,UAAA,EAAA,GAAAC,cAAAF,EAAAC,UAAA,MAIA,mBAAAnH,KAAAkD,QAAA+D,IACAjH,KAAAkD,QAAA+D,GAAAI,MAAArH,KAAA6G,MAKAtF,IAAA,SACA6D,MAAA,WACA,IAAAkC,EAAAtH,KAEAuH,EAAAvH,KAAAkD,QAAAhB,KACAqF,GAGAvH,KAAAkC,KAAA,SAAAsF,GACAD,EAAAF,MAAAC,GAAAE,SAKAjG,IAAA,OACA6D,MAAA,SAAAmC,GACA,IAAAE,EAAAzH,KACAyH,EAAApC,SAAAW,SAAAyB,EAAAzD,QAAAS,SAEAgD,EAAAhD,UACA8C,EAAAF,MAAAI,GACA,SAAAC,GACAD,EAAAhD,QAAAkD,KAAAC,IAAAH,EAAAhD,QAAA,EAAA,GACAiD,GAAAA,EAAA1G,QACAyG,EAAAI,QAAAH,GAEAD,EAAAhD,SACAgD,EAAApC,SAAAyC,YAAA,WAGAL,EAAAvC,SAAA,OAAAwC,SAMAnG,IAAA,SACA6D,MAAA,SAAA7B,GACA,IAAAwE,EAAA,GACAN,EAAAzH,KACAgI,EAAA,SAAArF,GACA,MACA,cACA8E,EAAAzD,QAAArB,KACA,KACA8E,EAAAvE,QAAAZ,OAAAI,OAAAuF,KAAAR,EAAA9E,GACA,SAIArC,EAAAG,QAAA6C,KAAAC,EAAA,SAAAxC,EAAA4B,GACAA,EAAAC,OACAmF,GAAA,cAAAN,EAAAzD,QAAApB,MAAA,KAEAmF,GACA,eACAN,EAAA7F,UACA,iBACA6F,EAAAvE,QAAAZ,OAAAM,MAAAqF,KAAAR,EAAA9E,GACA,SACAoF,GAAA,OAEAzH,EAAAG,QAAAyH,QAAAvF,EAAAO,UACA5C,EAAAG,QAAA6C,KAAAX,EAAAO,QAAA,SAAAiF,EAAAzF,GACAqF,GAAAC,EAAAtF,KAIAqF,GAAA,QACAA,GAAA,SAEAA,GAAAC,EAAArF,KAIA8E,EAAA7B,IAAAmC,KAAAA,MAIAxG,IAAA,eACA6D,MAAA,SAAA7B,GACA,IAAAkE,EAAAzH,KACA+H,EAAA,GAEAC,EAAA,SAAArF,GACA,MACA,kBAAAA,EAAAyC,MAAA,KAAAzC,EAAAF,KAAA,aAIAnC,EAAAG,QAAAyH,QAAA3E,IACAjD,EAAAG,QAAA6C,KAAAC,EAAA,SAAAxC,EAAA4B,GACAA,EAAAC,OACAmF,GAAA,oBAAApF,EAAAJ,MAAA,KAEAjC,EAAAG,QAAAyH,QAAAvF,EAAAO,UACA5C,EAAAG,QAAA6C,KAAAX,EAAAO,QAAA,SAAAiF,EAAAzF,GACAqF,GAAAC,EAAAtF,KAIAqF,GAAA,eAEAA,GAAAC,EAAArF,KAKA8E,EAAArE,QAAA2E,KAAAA,MAIAxG,IAAA,QACA6D,MAAA,SAAAgD,GACA,IAAAX,EAAAzH,KACAuD,KAEA8E,EAAA,WACA,OAAA/H,EAAAG,QAAAsD,WAEA,EAAAzD,EAAAG,SAAAT,MAAAuD,QAEA6B,MAAApF,KAAAoF,MACA3C,KAAAzC,KAAAyC,KACA6F,KAAAb,EAAAc,kBAAAvI,KAAAyC,SAiCA,OA5BA2F,EAAA9E,KAAA,WACA,GAAA,aAAAtD,KAAAwI,QAAA3E,cAAA,CACA,IAAAjB,EAAAtC,EAAAG,QAAAsD,WAEA,EAAAzD,EAAAG,SAAAT,MAAAuD,QAEAX,OAAA,EACAL,MAAAvC,KAAAuC,MACAW,cAIA,EAAA5C,EAAAG,SAAAT,MACA6F,WACAvC,KAAA,WACAV,EAAAM,QAAAwD,KAAA2B,EAAAJ,KAAAjI,SAEAuD,EAAAmD,KAAA9D,QAEAW,EAAAmD,KAAA2B,EAAAJ,KAAAjI,SAIAA,KAAA8F,SAAAxC,KAAA,SAAA/B,EAAAmB,IACA,EAAApC,EAAAG,SAAAiC,GAAAuD,KAAA,cACAwB,EAAA3C,aAAAvD,KAGAgC,KAIAhC,IAAA,SACA6D,MAAA,SAAAqD,GACAzI,KAAAsC,OAAAtC,KAAAuD,OACA,IAAAkF,GACAzI,KAAA0I,aAAA1I,KAAAuD,MAGAvD,KAAA2I,OAAA3I,KAAA2F,UAAAI,KAAA,IAAA/F,KAAAgE,QAAArB,MACA3C,KAAA8F,SAAA9F,KAAAoD,QAAA2C,KAAA,UACA/F,KAAA4I,MAAA5I,KAAA2I,OAAA3H,OACAhB,KAAAgF,KAAA,EAEAhF,KAAAiF,cACAjF,KAAA8E,aAAA,GAGA9E,KAAAqF,SAAAyC,YAAA9H,KAAAgE,QAAAU,OAEA1E,KAAA2F,UAAAkD,SAAA7I,KAAA4F,IAAAkD,cACA9I,KAAA+E,UAAA,EAEA/E,KAAA+E,UAAA,EAGA/E,KAAA8E,cAAA,EACA9E,KAAA+I,KAAA/I,KAAA8E,cAEA9E,KAAAyF,OAAAhD,KAAAzC,KAAAmG,iBAKA5E,IAAA,SACA6D,MAAA,SAAA4D,GACA,iBAAAA,GAAAA,GAAA,IACAhJ,KAAA+E,UACA/E,KAAAiJ,mBAAAD,GAEAhJ,KAAA+I,KAAAC,OAKAzH,IAAA,OACA6D,MAAA,SAAA4D,GACA,IAAArG,EAAA3C,KAAA2I,OAAAK,GACAE,GAAA,EAAA5I,EAAAG,SAAAkC,GACA3C,KAAAgF,KAAAhF,KAAA8E,aACA9E,KAAA8E,aAAAkE,EACAhJ,KAAAyF,OAAAhD,KAAAyG,EAAAzG,QAEAzC,KAAA8F,SAAA9E,SACA,EAAAV,EAAAG,SAAAT,KAAA8F,SAAAkD,IAAA/C,KACA,YACA,GAGAjG,KAAA2I,OAAAb,YAAA9H,KAAAgE,QAAAxB,UACA0G,EAAAlD,SAAAhG,KAAAgE,QAAAxB,UAEAxC,KAAAgF,OAAAhF,KAAA8E,cAEA9E,KAAAkF,SAAA,SAAAlF,KAAAmJ,eAAAH,GAAA5D,UAKA7D,IAAA,iBACA6D,MAAA,SAAA4D,GACA,IAAAI,EAAA,EACAC,EAAA,KAmBA,OAlBA/I,EAAAG,QAAA6C,KAAAtD,KAAAuD,KAAA,SAAAxC,EAAA4B,GACAA,EAAAC,MACAtC,EAAAG,QAAAyH,QAAAvF,EAAAO,UACA5C,EAAAG,QAAA6C,KAAAX,EAAAO,QAAA,SAAAiF,EAAAzF,GAEAsG,EAAA,MADAI,IAEAC,EAAA3G,KAMAsG,EAAA,MADAI,IAEAC,EAAA1G,KAKA0G,KAIA9H,IAAA,kBACA6D,MAAA,SAAA7B,GACA,IAAA6F,EAAA,EACAJ,EAAA,EAmBA,OAlBA1I,EAAAG,QAAA6C,KAAAtD,KAAAuD,KAAA,SAAAxC,EAAA4B,GACAA,EAAAC,MACAtC,EAAAG,QAAAyH,QAAAvF,EAAAO,UACA5C,EAAAG,QAAA6C,KAAAX,EAAAO,QAAA,SAAAiF,EAAAzF,GACAA,EAAA0C,QAAA7B,IACAyF,EAAAI,GAEAA,OAIAzG,EAAAyC,QAAA7B,IACAyF,EAAAI,GAEAA,OAIAJ,KAIAzH,IAAA,MACA6D,MAAA,WACA,OAAApF,KAAAmJ,eAAAnJ,KAAA8E,cAAAM,SAIA7D,IAAA,oBACA6D,MAAA,SAAAkE,GAUA,IAAAC,EAAA,yCACAzF,QAAA,OAAA,SACA0F,MAAA,KACAC,GAAA,EACAC,GAAA,EACAC,OAAAtH,EAEA,IACA,IACA,IAAAuH,EAAAC,EAAAN,EAAAO,OAAAC,cACAN,GAAAG,EAAAC,EAAAG,QAAAC,MACAR,GAAA,EACA,CACA,IAAAjG,EAAAoG,EAAAxE,MAEA/D,OAAA6I,eAAAjC,KAAAsB,EAAA/F,KACA8F,EAAAA,EACAzF,cACAC,QACA,IAAAH,OAAA,IAAA4F,EAAA/F,GAAA,IAAA,KACA,WAAA2G,OAAA3G,MAIA,MAAA4G,GACAV,GAAA,EACAC,EAAAS,EACA,QACA,KACAX,GAAAI,EAAAQ,QACAR,EAAAQ,SAEA,QACA,GAAAX,EACA,MAAAC,GAKA,OAAAL,KAIA/H,IAAA,WACA6D,MAAA,WACA,IAAAyD,EAAA7I,KAAAwF,SAAAsD,aAAA,GACA/G,EAAA/B,KAAAwF,SAAAzD,SACAuI,EAAAtK,KAAA2F,UAAAmD,aAAA,GACAyB,OAAA,EAOAA,EAJAD,EAAAvI,EAAAwI,KACA,EAAAjK,EAAAG,SAAA+J,QAAA3B,UACA,EAAAvI,EAAAG,SAAA+J,QAAAC,aAEAH,EAAAI,SAAA1K,KAAAkD,QAAAnB,OAAA,GAAA,IAEA8G,EAAA6B,SAAA1K,KAAAkD,QAAAnB,OAAA,GAAA,IAGA/B,KAAA2F,UAAAS,KACAmE,IAAAA,OAKAhJ,IAAA,kBACA6D,MAAA,WACA,IAAAqC,EAAAzH,KACA,UAAAA,KAAAkD,QAAApB,SACA9B,KAAAwF,SAAAmF,GAAA,sBAAA,WACAlD,EAAAnD,SAEAtE,KAAAqF,SAAAsF,GAAA,sBAAA,WAEA,OADAlD,EAAAmD,SACA,KAGA5K,KAAAwF,SAAAmF,GAAA,iBAAA,WACAlD,EAAA9C,OACA8C,EAAAmD,QAEAnD,EAAAnD,SAKAtE,KAAAoD,QACAuH,GAAA,iBAAA,WACAlD,EAAApC,SAAAW,SAAAyB,EAAAzD,QAAAQ,OACAiD,EAAA5C,SAAA,IAEA8F,GAAA,OAAA,WACAlD,EAAApC,SAAAyC,YAAAL,EAAAzD,QAAAQ,OACAiD,EAAA5C,SAAA,IAGA7E,KAAA2F,UAAAgF,GACA,iBACA,IAAA3K,KAAAgE,QAAArB,KACA,WACA,IAAAqG,EAAAvB,EAAAkB,OAAAK,OAAA,EAAA1I,EAAAG,SAAAT,OACAyH,EAAArF,OAAA4G,GACAvB,EAAAmD,aAMArJ,IAAA,oBACA6D,MAAA,WACApF,KAAAwF,SAAAqF,IAAA,aACA7K,KAAA8K,MAAAD,IAAA,aACA7K,KAAAoD,QAAAyH,IAAA,aACA7K,KAAA2F,UAAAkF,IAAA,gBAIAtJ,IAAA,gBACA6D,MAAA,WACA,IAAAqC,EAAAzH,MACA,EAAAM,EAAAG,SAAAsK,UAAAJ,GAAA,mBAAA,SAAAK,GACA,IAAAzJ,EAAAyJ,EAAAC,OAAAD,EAAAE,QAEA,GAAA,cAAAtH,KAAArC,GAGA,OADAkG,EAAAmD,SACA,EAGA,GAAArJ,EAAA,IAAAA,EAAA,GAEAkG,EAAA1C,UACA0C,EAAA0D,OAAA5J,QAEA,GAAA,YAAAqC,KAAArC,GAAA,CAEA,IAAA6J,EAAA,KAAA7J,EAAA,KAAA,OAEA,OADAkG,EAAA4D,SAAAD,IACA,QAMA7J,IAAA,SACA6D,MAAA,SAAA7D,GACA,IAAA+J,EAAA,GACAxG,OAAA,EACAyG,aAAAvL,KAAAwL,SACAF,EAAA,IAAA3H,OACA,KAAA2H,GAAAG,OAAAC,aAAAnK,IACA,KAEAvB,KAAAwL,QAAAG,WAAA,WACAL,EAAA,IACA,IAEAhL,EAAAG,QAAA6C,KAAAtD,KAAA2I,OAAA,SAAAK,EAAA5D,GAEA,IAAAwG,EAAAtL,EAAAG,QAAAoL,MACA,EAAAvL,EAAAG,SAAA2E,GAAA3C,QAEA,GAAA6I,EAAA1H,KAAAgI,GAEA,OADA9G,EAAAkE,GACA,IAGAlE,GAAA,GACA9E,KAAAoC,OAAA0C,MAKAvD,IAAA,qBACA6D,MAAA,SAAA4D,GACA,IAAArG,EAAA3C,KAAA2I,OAAAK,GACAyB,OAAA,EACAqB,GAAA,EAAAxL,EAAAG,SAAAkC,GAAAmG,cACAiD,EAAA/L,KAAA2F,UAAA8E,YACAuB,EAAAD,EAAA/L,KAAA2F,UAAAkD,SACAoD,GAAA,EAAA3L,EAAAG,SAAAkC,GAAAuJ,WAAA3B,IAEA,GAAA0B,EAAAF,EACAtB,EAAAwB,MACA,CAAA,KAAAA,EAAAD,EAAAF,GAGA,OAFArB,EAAAwB,EAAAH,EAAA9L,KAAA2F,UAAAkD,SAIA7I,KAAA2F,UAAA8E,UAAAA,MAIAlJ,IAAA,WACA6D,MAAA,SAAAgG,GACA,IAAAxC,EAAA5I,KAAA4I,MACAI,EAAAhJ,KAAA8E,aAAA,EAAA,EAAA9E,KAAA8E,aAEAkE,EADA,OAAAoC,EACApC,GAAA,EAAAJ,EAAA,EAAAI,EAAA,EAEAA,GAAAJ,EAAA,EAAA,EAAAI,EAAA,EAEAhJ,KAAAoC,OAAA4G,MAIAzH,IAAA,gBACA6D,MAAA,WACA,IAAAqC,EAAAzH,KACA,UAAAA,KAAAkD,QAAApB,UAGA9B,KAAAmM,OAAA,EAAA7L,EAAAG,SACA,eAAAT,KAAAgE,QAAAK,KAAA,YACA+H,SAAApM,KAAAqF,UACArF,KAAAmM,MAAAxB,GAAA,iBAAA,WAEA,OADAlD,EAAAmD,SACA,QAKArJ,IAAA,aACA6D,MAAA,WACA,UAAApF,KAAAkD,QAAApB,UAGA9B,KAAAmM,MAAAtB,IAAA,kBACA7K,KAAAmM,MAAAE,SACArM,KAAAmM,MAAA,SAIA5K,IAAA,OACA6D,MAAA,WACApF,KAAA2E,QAAA3E,KAAAuE,WAIAvE,KAAAoD,QAAAoB,QACAxE,KAAAsM,WACAtM,KAAAqF,SAAAW,SAAAhG,KAAAgE,QAAAM,MACAtE,KAAAuM,gBACAvM,KAAAwM,gBACAxM,KAAAkM,WAEAlM,KAAAkF,SAAA,QACAlF,KAAA2E,QAAA,MAIApD,IAAA,mjCA1sBA","file":"jquery-asSelect.min.js","sourcesContent":["/**\n* jQuery asSelect v0.2.3\n* https://github.com/amazingSurge/jquery-asSelect\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\n/*eslint no-empty-function: \"off\"*/\n\nvar DEFAULTS = {\n  namespace: 'asSelect',\n  skin: null,\n  trigger: 'click', // 'hover' or 'click'\n  offset: [0, 0], // set panel offset to trigger element\n  json: null, // if is a object,it will build from the object\n  preload: false, // preload some data set in load option\n  load: null, // preload data set here\n  maxHeight: 350, // set panel maxHeight, lists' height is bigger than maxHeight, scroll bar will show\n  select: undefined, // set initial selest value\n\n  render: {\n    label(selected) {\n      if (selected) {\n        return selected.text;\n      }\n      return 'Choose one';\n    },\n    option(item) {\n      return item.text;\n    },\n    group(item) {\n      return item.label;\n    }\n  },\n\n  onChange: function() {}\n};\n\nconst NAMESPACE$1 = 'asSelect';\nlet instances = [];\n/**\n * Plugin constructor\n **/\nclass asSelect {\n  constructor(element, options = {}) {\n    this.element = element;\n    this.$select = $(element);\n\n    // options\n    const metas = [];\n    $.each(this.$select.data(), (k, v) => {\n      const re = new RegExp(`^${NAMESPACE$1}`, \"i\");\n      if (re.test(k)) {\n        metas[k.toLowerCase().replace(re, '')] = v;\n      }\n    });\n\n    this.options = $.extend(true, {}, DEFAULTS, options, metas);\n    this.namespace = this.options.namespace;\n\n    this.classes = {\n      wrapper: `${this.namespace}-wrapper`,\n      old: `${this.namespace}-old`,\n      dropdown: `${this.namespace}-dropdown`,\n      trigger: `${this.namespace}-trigger`,\n      label: `${this.namespace}-label`,\n      handler: `${this.namespace}-handler`,\n      item: `${this.namespace}-item`,\n      group: `${this.namespace}-group`,\n      mask: `${this.namespace}-mask`,\n\n      skin: `${this.namespace}_${this.options.skin}`,\n      open: `${this.namespace}_open`,\n      disabled: `${this.namespace}_disabled`,\n      selected: `${this.namespace}_selected`,\n      focus: `${this.namespace}_focus`,\n      loading: `${this.namespace}_loading`,\n      error: `${this.namespace}_error`\n    };\n\n    // flag\n    this.opened = false;\n    this.eventBinded = false;\n    this.inFocus = true;\n    // this.loading = false;\n    this.currentIndex = this.options.select;\n    this.isScroll = false;\n    this.last = 0;\n    this.disabled = false;\n    this.initialized = false;\n\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    this.$wrapper = this.$select.wrap(`<div class=\"${this.classes.wrapper}\"><div class=\"${this.classes.old}\" ></div></div>`).parent().parent();\n    this.$trigger = $(`<div class=\"${this.classes.trigger}\"><div class=\"${this.classes.handler}\"></div></div>`);\n    this.$label = $(`<div class=\"${this.classes.label}\">${this.options.render.label()}</div>`).prependTo(this.$trigger);\n    this.$dropdown = $(`<div class=\"${this.classes.dropdown}\"><ul></ul></div>`);\n    this.$ul = this.$dropdown.children('ul');\n    this.$options = this.$select.find('option');\n\n    if (this.options.skin) {\n      this.$wrapper.addClass(this.classes.skin);\n    }\n\n    if (this.$select.prop('disabled')) {\n      this.disable();\n    }\n\n    this.unChooseText = this.$label.text();\n    this.$dropdown.css('maxHeight', this.options.maxHeight);\n\n    // parse data from select label\n    this.data = this.parse(this.$select.children());\n\n    // render html from data\n    this.update(true);\n\n    // add to page\n    this.$wrapper.append(this.$trigger).append(this.$dropdown);\n\n    // attach event\n    this.attachInitEvent();\n\n    // set initial value\n    // this.select(this.currentIndex);\n\n    if (this.options.preload) {\n      this.onLoad();\n    }\n\n    // hold every instance\n    instances.push(this);\n    this.initialized = true;\n    this._trigger('ready');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$select.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  onLoad() {\n    const fn = this.options.load;\n    if (!fn) {\n      return;\n    }\n    this.load(callback => {\n      fn.apply(this, [callback]);\n    });\n  }\n\n  load(fn) {\n    const that = this;\n    that.$wrapper.addClass(that.classes.loading);\n\n    that.loading++;\n    fn.apply(that, [\n      results => {\n        that.loading = Math.max(that.loading - 1, 0);\n        if (results && results.length) {\n          that.addData(results);\n        }\n        if (!that.loading) {\n          that.$wrapper.removeClass('loading');\n        }\n\n        that._trigger('load', results);\n      }\n    ]);\n  }\n\n  render(data) {\n    let html = '';\n    const that = this;\n    const buildOption = item => `<li class=\"${that.classes.item}\">${that.options.render.option.call(that, item)}</li>`;\n\n    $.each(data, (i, item) => {\n      if (item.group) {\n        html += `<li class=\"${that.classes.group}\">`;\n\n        html += `<div class=\"${that.namespace}-group-label\">${that.options.render.group.call(that, item)}</div>`;\n        html += '<ul>';\n\n        if ($.isArray(item.options)) {\n          $.each(item.options, (j, option) => {\n            html += buildOption(option);\n          });\n        }\n\n        html += '</ul>';\n        html += '</li>';\n      } else {\n        html += buildOption(item);\n      }\n    });\n\n    that.$ul.html(html);\n  }\n\n  freshOptions(data) {\n    const that = this;\n    let html = '';\n\n    const buildOption = item => `<option value=\"${item.value}\">${item.text}</option>`;\n\n    if ($.isArray(data)) {\n      $.each(data, (i, item) => {\n        if (item.group) {\n          html += `<optgroup label=\"${item.label}\">`;\n\n          if ($.isArray(item.options)) {\n            $.each(item.options, (j, option) => {\n              html += buildOption(option);\n            });\n          }\n\n          html += '</optgroup>';\n        } else {\n          html += buildOption(item);\n        }\n      });\n    }\n\n    that.$select.html(html);\n  }\n\n  parse($selects) {\n    const that = this;\n    const data = [];\n\n    const optionToData = function() {\n      return $.extend({}, $(this).data(), {\n        'value': this.value,\n        'text': this.text,\n        'slug': that.replaceDiacritics(this.text)\n      });\n    };\n\n    $selects.each(function() {\n      if (this.tagName.toLowerCase() === 'optgroup') {\n        const group = $.extend({}, $(this).data(), {\n          'group': true,\n          'label': this.label,\n          'options': []\n        });\n\n        $(this).children().each(function() {\n          group.options.push(optionToData.call(this));\n        });\n        data.push(group);\n      } else {\n        data.push(optionToData.call(this));\n      }\n    });\n\n    this.$options.each((key, option) => {\n      if ($(option).prop('selected')) {\n        that.currentIndex = key;\n      }\n    });\n    return data;\n  }\n\n  update(noFreshOptions) {\n    this.render(this.data);\n    if (noFreshOptions !== true) {\n      this.freshOptions(this.data);\n    }\n\n    this.$items = this.$dropdown.find(`.${this.classes.item}`);\n    this.$options = this.$select.find('option');\n    this.total = this.$items.length;\n    this.last = 0;\n\n    if (this.initialized) {\n      this.currentIndex = 0;\n    }\n\n    this.$wrapper.removeClass(this.classes.error);\n\n    if (this.$dropdown.height() > this.$ul.outerHeight()) {\n      this.isScroll = true;\n    } else {\n      this.isScroll = false;\n    }\n\n    if (this.currentIndex >= 0) {\n      this._set(this.currentIndex);\n    } else {\n      this.$label.text(this.unChooseText);\n    }\n  }\n\n  select(index) {\n    if (typeof index === 'number' && index >= 0) {\n      if (this.isScroll) {\n        this.scrollToVisibility(index);\n      }\n      this._set(index);\n    }\n  }\n\n  _set(index) {\n    const item = this.$items[index];\n    const $item = $(item);\n    this.last = this.currentIndex;\n    this.currentIndex = index;\n    this.$label.text($item.text());\n\n    if (this.$options.length) {\n      $(this.$options[index]).prop('selected', true);\n    }\n    this.$items.removeClass(this.classes.selected);\n    $item.addClass(this.classes.selected);\n\n    if (this.last !== this.currentIndex) {\n      // pass source data object\n      this._trigger('change', this.getCurrentData(index).value);\n    }\n  }\n\n  getCurrentData(index) {\n    let count = 0;\n    let result = null;\n    $.each(this.data, (i, item) => {\n      if (item.group) {\n        if ($.isArray(item.options)) {\n          $.each(item.options, (j, option) => {\n            count++;\n            if (index + 1 === count) {\n              result = option;\n            }\n          });\n        }\n      } else {\n        count++;\n        if (index + 1 === count) {\n          result = item;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  getCurrentIndex(data) {\n    let count = 0;\n    let index = 0;\n    $.each(this.data, (i, item) => {\n      if (item.group) {\n        if ($.isArray(item.options)) {\n          $.each(item.options, (j, option) => {\n            if (option.value === data) {\n              index = count;\n            }\n            count++;\n          });\n        }\n      } else {\n        if (item.value === data) {\n          index = count;\n        }\n        count++;\n      }\n    });\n\n    return index;\n  }\n\n  get() {\n    return this.getCurrentData(this.currentIndex).value;\n  }\n\n  replaceDiacritics(s) {\n    // /[\\340-\\346]/g, // a\n    // /[\\350-\\353]/g, // e\n    // /[\\354-\\357]/g, // i\n    // /[\\362-\\370]/g, // o\n    // /[\\371-\\374]/g, // u\n    // /[\\361]/g, // n\n    // /[\\347]/g, // c\n    // /[\\377]/g // y\n\n    const d = '40-46 50-53 54-57 62-70 71-74 61 47 77'.replace(/\\d+/g, '\\\\3$&').split(' ');\n    for (let k of d) {\n      if(Object.hasOwnProperty.call(d, k)) {\n        s = s.toLowerCase().replace(new RegExp(`[${d[k]}]`, 'g'), 'aeiouncy'.charAt(k));\n      }\n    }\n    return s;\n  }\n\n  position() {\n    const height = this.$trigger.outerHeight(true);\n    const offset = this.$trigger.offset();\n    const contentHeight = this.$dropdown.outerHeight(true);\n    let top;\n\n    if (contentHeight + offset.top > $(window).height() + $(window).scrollTop()) {\n      top = -contentHeight - parseInt(this.options.offset[0], 10);\n    } else {\n      top = height + parseInt(this.options.offset[0], 10);\n    }\n\n    this.$dropdown.css({\n      top,\n    });\n  }\n\n  attachInitEvent() {\n    const that = this;\n    if (this.options.trigger === 'hover') {\n      this.$trigger.on('mouseenter.asSelect', () => {\n        that.open();\n      });\n      this.$wrapper.on('mouseleave.asSelect', () => {\n        that.close();\n        return false;\n      });\n    } else {\n      this.$trigger.on('click.asSelect', () => {\n        if (that.opened) {\n          that.close();\n        } else {\n          that.open();\n        }\n      });\n    }\n\n    this.$select.on('focus.asSelect', () => {\n      that.$wrapper.addClass(that.classes.focus);\n      that.inFocus = true;\n    }).on('blur', () => {\n      that.$wrapper.removeClass(that.classes.focus);\n      that.inFocus = false;\n    });\n\n    this.$dropdown.on('click.asSelect', `.${this.classes.item}`, function() {\n      const index = that.$items.index($(this));\n      that.select(index);\n      that.close();\n    });\n  }\n\n  dettachInitEvents() {\n    this.$trigger.off('.asSelect');\n    this.$wrap.off('.asSelect');\n    this.$select.off('.asSelect');\n    this.$dropdown.off('.asSelect');\n  }\n\n  keyboardEvent() {\n    const that = this;\n    $(document).on('keydown.asSelect', e => {\n      const key = e.which || e.keycode;\n\n      if (/^(9|13|27)$/.test(key)) {\n        // close shortcut\n        that.close();\n        return false;\n      }\n\n      if (key < 37 || key > 40) {\n        // search\n        if (that.isScroll) {\n          that.search(key);\n        }\n      } else if (/^(38|40)$/.test(key)) {\n        // key navigate\n        const direction = key === 38 ? 'up' : 'down';\n        that.navigate(direction);\n        return false;\n      }\n\n    });\n  }\n\n  search(key) {\n    let searchString = '';\n    let currentIndex;\n    clearTimeout(this.timeout);\n    searchString = new RegExp(`^${searchString += String.fromCharCode(key)}`, 'i');\n    this.timeout = setTimeout(() => {\n      searchString = '';\n    }, 16);\n\n    $.each(this.$items, (index, value) => {\n      /*eslint consistent-return: \"off\"*/\n      const string = $.trim($(value).text());\n      if (searchString.test(string)) {\n        currentIndex = index;\n        return false;\n      }\n    });\n    if (currentIndex >= 0) {\n      this.select(currentIndex);\n    }\n  }\n\n  scrollToVisibility(index) {\n    const item = this.$items[index];\n    let scrollTop;\n    const itemHeight = $(item).outerHeight();\n    const oriScrollTop = this.$dropdown.scrollTop();\n    const bottom = oriScrollTop + this.$dropdown.height();\n    const distance = $(item).position().top;\n\n    if (distance < oriScrollTop) {\n      scrollTop = distance;\n    } else if (distance > bottom - itemHeight) {\n      scrollTop = distance + itemHeight - this.$dropdown.height();\n    } else {\n      return;\n    }\n    this.$dropdown.scrollTop(scrollTop);\n  }\n\n  navigate(direction) {\n    const total = this.total;\n    let index = this.currentIndex < 0 ? 0 : this.currentIndex;\n    if (direction === 'up') {\n      index = index <= 0 ? total - 1 : index - 1;\n    } else {\n      index = index >= total - 1 ? 0 : index + 1;\n\n    }\n    this.select(index);\n  }\n\n  _generateMask() {\n    const that = this;\n    if (this.options.trigger === 'hover') {\n      return;\n    }\n    this.$mask = $(`<div class=\"${this.classes.mask}\"></div>`).appendTo(this.$wrapper);\n    this.$mask.on('click.asSelect', () => {\n      that.close();\n      return false;\n    });\n  }\n\n  _clearMask() {\n    if (this.options.trigger === 'hover') {\n      return;\n    }\n    this.$mask.off('click.asSelect');\n    this.$mask.remove();\n    this.$mask = null;\n  }\n\n  open() {\n    if (this.opened || this.disabled) {\n      return;\n    }\n\n    this.$select.focus();\n    this.closeAll();\n    this.$wrapper.addClass(this.classes.open);\n    this._generateMask();\n    this.keyboardEvent();\n    this.position();\n\n    this._trigger('open');\n    this.opened = true;\n  }\n\n  close() {\n    this.$wrapper.removeClass(this.classes.open);\n    this._clearMask();\n    $(document).off('keydown.select');\n    this._trigger('close');\n    this.opened = false;\n  }\n\n  closeAll() {\n    $.each(instances, (key, instance) => {\n      if (instance.opened) {\n        instance.close();\n      }\n    });\n  }\n\n  addData(data) {\n    const that = this;\n    if ($.isArray(data)) {\n      $.each(data, (i, item) => {\n        if (!item.group) {\n          data[i].slug = that.replaceDiacritics(item.text);\n        }\n      });\n      this.data = this.data.concat(data);\n      this.update();\n    }\n  }\n\n  removeData(data) {\n    return data;\n  }\n\n  enable() {\n    this.disabled = false;\n    this.$trigger.removeClass(this.classes.disabled);\n    this._trigger('enable');\n    return this;\n  }\n\n  disable() {\n    this.disabled = true;\n    this.$trigger.addClass(this.classes.disabled);\n    this._trigger('disable');\n    return this;\n  }\n\n  destroy() {\n    this.dettachInitEvents();\n    $(document).off('.asSelect');\n\n    this.$dropdown.remove();\n    this.$trigger.remove();\n    this.$select.unwrap().unwrap();\n    this._trigger('destroy');\n  }\n\n  static setDefaults(options) {\n    $.extend(true, DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.2.3'\n};\n\nconst NAMESPACE = 'asSelect';\nconst OtherAsSelect = $.fn.asSelect;\n\nconst jQueryAsSelect = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asSelect(this, options));\n    }\n  });\n};\n\n$.fn.asSelect = jQueryAsSelect;\n\n$.asSelect = $.extend({\n  setDefaults: asSelect.setDefaults,\n  noConflict: function() {\n    $.fn.asSelect = OtherAsSelect;\n    return jQueryAsSelect;\n  }\n}, info);\n"]}